{"version":3,"file":"index.js","sources":["../../../packages/tbDialog/index.js"],"sourcesContent":["/**\r\n * 弹框组件\r\n * @class TbDialog\r\n * @file tbDialog\r\n * @exports TbDialog\r\n * @requires \r\n * @example\r\n */\r\n/**\r\n * 参数说明\r\n * @property {String} title 弹框标题\r\n * @property {String | HTMLElement | DocumentFragment} content 弹框内容 可以是字符串、dom节点、文档碎片\r\n * @property {String} confirmText 确认按钮文字\r\n * @property {String} cancelText 取消按钮文字\r\n * @property {Boolean} showCancel 是否显示取消按钮\r\n * @property {Boolean} showConfirm 是否显示确认按钮\r\n * @property {Boolean} showClose 是否显示关闭按钮\r\n * @property {Boolean} showMask 是否显示遮罩层\r\n * @property {Boolean} maskClosable 点击遮罩层是否关闭弹框\r\n * @property {Boolean} showTitle 是否显示标题\r\n * @property {Function} onConfirm 点击确认按钮回调函数\r\n * @property {Function} onCancel 点击取消按钮回调函数\r\n */\r\nimport './index.less'\r\nconst defaultOptions = {\r\n    title: '提示',\r\n    content: '',\r\n    confirmText: '确定',\r\n    cancelText: '取消',\r\n    showCancel: true,\r\n    showConfirm: true,\r\n    showClose: false,\r\n    showMask: true,\r\n    maskClosable: true,\r\n    showTitle: true\r\n}\r\n\r\nclass TbDialog {\r\n    constructor (options) {\r\n        // 合并配置项\r\n        this.options = Object.assign({}, defaultOptions, options)\r\n        // 创建弹框\r\n        this.createDialog()\r\n    }\r\n    // 创建弹框\r\n    createDialog () {\r\n        // 创建弹框\r\n        this.dialog = document.createElement('div')\r\n        // 设置弹框样式\r\n        this.dialog.className = 'tb-dialog'\r\n        // 创建弹框头部\r\n        this.createHeader()\r\n        // 创建弹框内容\r\n        this.createContent()\r\n        // 创建弹框底部\r\n        this.createFooter()\r\n        // 创建遮罩层\r\n        this.createMask()\r\n        // 将弹框添加到页面\r\n        document.body.appendChild(this.dialog)\r\n        this.show()\r\n    }\r\n    // 创建弹框头部\r\n    createHeader () {\r\n        // 创建头部\r\n        this.header = document.createElement('div')\r\n        // 设置头部样式\r\n        this.header.className = 'tb-dialog-header'\r\n        // 判断有无标题\r\n        if (this.options.showTitle) {\r\n            this.header.innerHTML = this.options.title\r\n        }\r\n        // 判断有无关闭按钮\r\n        if (this.options.showClose) {\r\n            // 创建关闭按钮\r\n            this.closeBtn = document.createElement('span')\r\n            this.closeBtn.className = 'tb-dialog-close'\r\n            this.closeBtn.innerHTML = '&times;'\r\n            // 绑定点击事件\r\n            this.closeBtn.addEventListener('click', () => {\r\n                this.hide()\r\n            })\r\n            // 将关闭按钮添加到头部\r\n            this.header.appendChild(this.closeBtn)\r\n        }\r\n        \r\n        if (this.options.showClose || this.options.showTitle) {\r\n            // 将头部添加到弹框\r\n            this.dialog.appendChild(this.header)\r\n        }\r\n    }\r\n    // 创建弹框内容\r\n    createContent () {\r\n        // 创建内容\r\n        this.content = document.createElement('div')\r\n        this.content.className = 'tb-dialog-content'\r\n        // 判断内容类型\r\n        if (typeof this.options.content === 'string') {\r\n            // 判断是否为id\r\n            if (this.options.content.indexOf('#') === 0) {\r\n                // 获取内容\r\n                this.content.innerHTML = document.querySelector(this.options.content).innerHTML\r\n            } else {\r\n                this.content.innerHTML = this.options.content\r\n            }\r\n        } else if (this.options.content instanceof HTMLElement || this.options.content instanceof DocumentFragment) {\r\n            this.content.appendChild(this.options.content)\r\n        } else {\r\n            throw new Error('content参数类型错误, 请传入字符串或者dom节点')\r\n        }\r\n        // 将内容添加到弹框\r\n        this.dialog.appendChild(this.content)\r\n    }\r\n    // 创建弹框底部\r\n    createFooter () {\r\n        // 创建底部\r\n        this.footer = document.createElement('div')\r\n        this.footer.className = 'tb-dialog-footer'\r\n        // 判断是否显示取消按钮\r\n        if (this.options.showCancel) {\r\n            // 创建取消按钮\r\n            this.cancelBtn = document.createElement('button')\r\n            this.cancelBtn.className = 'tb-dialog-cancel'\r\n            this.cancelBtn.innerHTML = this.options.cancelText\r\n            // 绑定点击事件\r\n            this.cancelBtn.addEventListener('click', () => {\r\n                this.close()\r\n                // 判断是否有取消回调函数\r\n                if (typeof this.options.onCancel === 'function') {\r\n                    this.options.onCancel()\r\n                }\r\n            })\r\n            // 将取消按钮添加到底部\r\n            this.footer.appendChild(this.cancelBtn)\r\n        }\r\n        // 判断是否显示确认按钮\r\n        if (this.options.showConfirm) {\r\n            // 创建确认按钮\r\n            this.confirmBtn = document.createElement('button')\r\n            this.confirmBtn.className = 'tb-dialog-confirm'\r\n            this.confirmBtn.innerHTML = this.options.confirmText\r\n            // 绑定点击事件\r\n            this.confirmBtn.addEventListener('click', () => {\r\n                this.close()\r\n                // 判断是否有确认回调函数\r\n                if (typeof this.options.onConfirm === 'function') {\r\n                    this.options.onConfirm()\r\n                }\r\n            })\r\n            // 将确认按钮添加到底部\r\n            this.footer.appendChild(this.confirmBtn)\r\n        }\r\n        if (this.options.showCancel || this.options.showConfirm) {\r\n            // 将底部添加到弹框\r\n            this.dialog.appendChild(this.footer)\r\n        }\r\n    }\r\n    // 创建遮罩层\r\n    createMask () {\r\n        // 判断是否显示遮罩层\r\n        if (this.options.showMask) {\r\n            // 创建遮罩层\r\n            this.mask = document.createElement('div')\r\n            // 设置遮罩层样式\r\n            this.mask.className = 'tb-mask'\r\n            // 判断点击遮罩层是否关闭弹框\r\n            if (this.options.maskClosable) {\r\n                // 绑定点击事件\r\n                this.mask.addEventListener('click', () => {\r\n                    this.close()\r\n                })\r\n            }\r\n            // 将遮罩层添加到页面\r\n            document.body.appendChild(this.mask)\r\n        }\r\n    }\r\n    // 显示弹框\r\n    show () {\r\n        // 判断是否显示遮罩层\r\n        if (this.options.showMask) {\r\n            this.mask.style.transform = 'translateY(-100vh)'\r\n            this.mask.style.transform = 'opacity(1)'\r\n        }\r\n        this.dialog.style.display = 'block'\r\n        this.dialog.style.transform = 'translate(-50%, -50%) scale(1)'\r\n        this.dialog.style.opacity = 1\r\n    }\r\n    // 隐藏弹框\r\n    close () {\r\n        this.dialog.style.transform = 'translate(-50%, -50%) scale(0.7)'\r\n        this.dialog.style.opacity = 0\r\n        this.mask.style.opacity = 0\r\n        // 过渡完成后执行隐藏mask\r\n        this.dialog.addEventListener('transitionend', () => {\r\n            // 判断是否显示遮罩层\r\n            this.dialog.style.display = 'none'\r\n            this.mask.style.transform = 'translateY(100vh)'\r\n            // 删除元素\r\n            this.dialog.remove()\r\n            this.mask.remove()\r\n        }, {\r\n            once: true\r\n        })\r\n    }\r\n}\r\nexport default TbDialog"],"names":["defaultOptions","title","content","confirmText","cancelText","showCancel","showConfirm","showClose","showMask","maskClosable","showTitle","constructor","options","this","Object","assign","createDialog","dialog","document","createElement","className","createHeader","createContent","createFooter","createMask","body","appendChild","show","header","innerHTML","closeBtn","addEventListener","hide","indexOf","querySelector","HTMLElement","DocumentFragment","Error","footer","cancelBtn","close","onCancel","confirmBtn","onConfirm","mask","style","transform","display","opacity","remove","once"],"mappings":"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"}